//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MyFramework_ModelCompBaseWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MyFramework.ModelCompBase), typeof(System.Object));
		L.RegFunction("Load", Load);
		L.RegFunction("Start", Start);
		L.RegFunction("Close", Close);
		L.RegFunction("ShowInspector", ShowInspector);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("State", get_State, set_State);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Load(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			MyFramework.ModelCompBase obj = (MyFramework.ModelCompBase)ToLua.CheckObject<MyFramework.ModelCompBase>(L, 1);
			MyFramework.ModelContorlBase arg0 = (MyFramework.ModelContorlBase)ToLua.CheckObject<MyFramework.ModelContorlBase>(L, 2);
			object[] arg1 = ToLua.ToParamsObject(L, 3, count - 2);
			obj.Load(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Start(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			MyFramework.ModelCompBase obj = (MyFramework.ModelCompBase)ToLua.CheckObject<MyFramework.ModelCompBase>(L, 1);
			object[] arg0 = ToLua.ToParamsObject(L, 2, count - 1);
			obj.Start(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Close(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MyFramework.ModelCompBase obj = (MyFramework.ModelCompBase)ToLua.CheckObject<MyFramework.ModelCompBase>(L, 1);
			obj.Close();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowInspector(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MyFramework.ModelCompBase obj = (MyFramework.ModelCompBase)ToLua.CheckObject<MyFramework.ModelCompBase>(L, 1);
			obj.ShowInspector();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_State(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyFramework.ModelCompBase obj = (MyFramework.ModelCompBase)o;
			MyFramework.ModelCompBaseState ret = obj.State;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index State on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_State(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyFramework.ModelCompBase obj = (MyFramework.ModelCompBase)o;
			MyFramework.ModelCompBaseState arg0 = (MyFramework.ModelCompBaseState)ToLua.CheckObject(L, 2, typeof(MyFramework.ModelCompBaseState));
			obj.State = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index State on a nil value");
		}
	}
}

