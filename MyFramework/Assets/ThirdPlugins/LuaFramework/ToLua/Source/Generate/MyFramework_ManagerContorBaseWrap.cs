//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MyFramework_ManagerContorBaseWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MyFramework.ManagerContorBase), typeof(MyFramework.ModelContorlBase));
		L.RegFunction("LoadEnd", LoadEnd);
		L.RegFunction("Load", Load);
		L.RegFunction("New", _CreateMyFramework_ManagerContorBase);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateMyFramework_ManagerContorBase(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				MyFramework.ManagerContorBase obj = new MyFramework.ManagerContorBase();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: MyFramework.ManagerContorBase.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MyFramework.ManagerContorBase obj = (MyFramework.ManagerContorBase)ToLua.CheckObject<MyFramework.ManagerContorBase>(L, 1);
			bool o = obj.LoadEnd();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Load(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			MyFramework.ManagerContorBase obj = (MyFramework.ManagerContorBase)ToLua.CheckObject<MyFramework.ManagerContorBase>(L, 1);
			object[] arg0 = ToLua.ToParamsObject(L, 2, count - 1);
			obj.Load(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

